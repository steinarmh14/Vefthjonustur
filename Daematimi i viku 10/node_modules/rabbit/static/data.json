{
    "project": {
        "name": "Rabbit",
        "description": "RabbitMQ powered distributed job management.",
        "version": "0.0.5",
        "url": "https://github.com/UsabilityDynamics/abstract/",
        "logo": "http://a3d72a45d111006ec192-ec5b80a12b0b09b4d52373336afb4254.r80.cf1.rackcdn.com/usability-dynamics.png"
    },
    "files": {
        "lib/correlation.js": {
            "name": "lib/correlation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/job.js": {
            "name": "lib/job.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/rabbit.js": {
            "name": "lib/rabbit.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {},
    "classitems": [
        {
            "file": "lib/correlation.js",
            "line": 1,
            "description": "Correlation Response Stream\n\n-",
            "is_constructor": 1,
            "chainable": 1,
            "author": "potanin",
            "date": "8/10/13",
            "class": ""
        },
        {
            "file": "lib/correlation.js",
            "line": 75,
            "description": "Correlation job timeout.",
            "todo": [
                "-"
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib/correlation.js",
            "line": 96,
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Correlation"
            },
            "class": ""
        },
        {
            "file": "lib/job.js",
            "line": 1,
            "description": "-\n\n-",
            "chainable": 1,
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "is_constructor": 1,
            "author": "potanin@UD",
            "class": ""
        },
        {
            "file": "lib/job.js",
            "line": 108,
            "description": "Pack String",
            "params": [
                {
                    "name": "string",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib/job.js",
            "line": 134,
            "description": "Unpack Message",
            "params": [
                {
                    "name": "string",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib/job.js",
            "line": 161,
            "description": "Update Progress.",
            "itemtype": "method",
            "name": "progress",
            "params": [
                {
                    "name": "string",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib/job.js",
            "line": 192,
            "description": "Complete Job.",
            "itemtype": "method",
            "name": "complete",
            "params": [
                {
                    "name": "string",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib/job.js",
            "line": 245,
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Job"
            },
            "class": ""
        },
        {
            "file": "lib/rabbit.js",
            "line": 1,
            "description": "Rabbit\n\nThe Rabbit works, or else the Rabbit gets fucked; proper fucked, that is\n\n## Events\n- connection: General connection event - could be an error or a success.\n- connection.success: Successful connection event.\n- connection.error: Connection failure.",
            "params": [
                {
                    "name": "settings",
                    "description": "Configuration.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "exchange",
                            "description": "Unique name for the work exchange, defaults to \"node-rabbit\".",
                            "type": "String"
                        },
                        {
                            "name": "api",
                            "description": "URL to RabbitMQ management API, if available.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "cb",
                    "description": "Callback function, optional. May also bind listener to \"connection\", \"connection.success\" or \"connection.error\" events.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Newly created Rabbit instance.",
                "type": "Rabbit"
            },
            "async": 1,
            "chainable": 1,
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "lib/rabbit.js",
            "line": 112,
            "description": "Configure Client\n\nMethod executed when connection is ready.\nUsage and semantics emulating Express.",
            "params": [
                {
                    "name": "env",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib/rabbit.js",
            "line": 145,
            "description": "Define a job.",
            "params": [
                {
                    "name": "name",
                    "description": "Name of job type.",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Function to process job.",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "lib/rabbit.js",
            "line": 224,
            "description": "Run a job.",
            "itemtype": "method",
            "name": "runJob",
            "chainable": 1,
            "params": [
                {
                    "name": "job_type",
                    "description": "Name of job type.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Job data.",
                    "type": "Object"
                },
                {
                    "name": "response",
                    "description": "Callback method.",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "lib/rabbit.js",
            "line": 330,
            "description": "Make RabbitMQ API Request",
            "example": [
                "\n\n   // Get Vhosts\n   Instance.api( 'get', 'vhosts', console.log );\n\n   // Get queues\n   Instance.api( 'get', 'queues', console.log );"
            ],
            "async": 1,
            "chainable": 1,
            "params": [
                {
                    "name": "method",
                    "description": ""
                },
                {
                    "name": "query",
                    "description": ""
                },
                {
                    "name": "cb",
                    "description": ""
                }
            ],
            "class": ""
        },
        {
            "file": "lib/rabbit.js",
            "line": 422,
            "description": "Returns new instance of Rabbit.",
            "params": [
                {
                    "name": "settings",
                    "description": "Configuration for connection.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Rabbit"
            },
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: date",
            "line": " lib/correlation.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/correlation.js:75"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/correlation.js:96"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/job.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/job.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/job.js:134"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/job.js:161"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/job.js:192"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/job.js:245"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/rabbit.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/rabbit.js:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/rabbit.js:422"
        },
        {
            "message": "Missing item type\nCorrelation Response Stream\n\n-",
            "line": " lib/correlation.js:1"
        },
        {
            "message": "Missing item type\nCorrelation job timeout.",
            "line": " lib/correlation.js:75"
        },
        {
            "message": "Missing item type",
            "line": " lib/correlation.js:96"
        },
        {
            "message": "Missing item type\n-\n\n-",
            "line": " lib/job.js:1"
        },
        {
            "message": "Missing item type\nPack String",
            "line": " lib/job.js:108"
        },
        {
            "message": "Missing item type\nUnpack Message",
            "line": " lib/job.js:134"
        },
        {
            "message": "Missing item type",
            "line": " lib/job.js:245"
        },
        {
            "message": "Missing item type\nRabbit\n\nThe Rabbit works, or else the Rabbit gets fucked; proper fucked, that is\n\n## Events\n- connection: General connection event - could be an error or a success.\n- connection.success: Successful connection event.\n- connection.error: Connection failure.",
            "line": " lib/rabbit.js:1"
        },
        {
            "message": "Missing item type\nConfigure Client\n\nMethod executed when connection is ready.\nUsage and semantics emulating Express.",
            "line": " lib/rabbit.js:112"
        },
        {
            "message": "Missing item type\nDefine a job.",
            "line": " lib/rabbit.js:145"
        },
        {
            "message": "Missing item type\nMake RabbitMQ API Request",
            "line": " lib/rabbit.js:330"
        },
        {
            "message": "Missing item type\nReturns new instance of Rabbit.",
            "line": " lib/rabbit.js:422"
        }
    ]
}